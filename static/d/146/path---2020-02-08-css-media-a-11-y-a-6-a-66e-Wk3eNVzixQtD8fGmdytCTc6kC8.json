{"data":{"site":{"siteMetadata":{"title":"Devilish Alchemist's Blog","description":"Front-end musings and stuff"}},"markdownRemark":{"id":"4ff02e0b-61f0-5bb5-a7e0-7acc20d1fe9b","excerpt":"W specyfikacji Media Queries poziomu 5 wprowadzane są nowe reguły @media pozwalające na szanowanie ustawień użytkownika w paru zakresach. Dwa najbardziej…","html":"<p>W specyfikacji <a href=\"https://drafts.csswg.org/mediaqueries-5\">Media Queries poziomu 5</a> wprowadzane są nowe reguły @media pozwalające na szanowanie ustawień użytkownika w paru zakresach. Dwa najbardziej konkretne z nich wspierane są już przez większość przeglądarek i na tych się skupię, wspominając krótko o reszcie propozycji.</p>\n<h2>Ruch</h2>\n<p>Gdy tylko w sieci Web pojawiła się taka możliwość autorzy stron zaczęli dodawać do swoich stron wszelakie animacje. Początkowo mogły być to elementy <code class=\"language-text\">&lt;marquee&gt;</code> lub animowane GIFy, później Flash stworzył czego dusza zapragnęła, dziś korzystamy z dobrodziejstw JS i animacji CSS. Czy ktokolwiek zatrzymał się jednak na chwilę i pomyślał, czy każdemu użytkownikowi fikuśne animacje odpowiadają?</p>\n<p>Aż <a href=\"https://vestibular.org/understanding-vestibular-disorder\">do 35% dorosłych powyżej wieku 40 lat</a> doświadczyło jakiejś formy zaburzenia przedsionka ucha wewnętrznego, które służy wykrywaniu pozycji głowy lub odczuwaniu przyspieszenia w aucie czy windzie (<a href=\"https://pl.wikipedia.org/wiki/Propriocepcja\">propriocepcji</a>). Niespodziewany, szybki ruch jest w stanie u takich osób wywołać zawroty głowy i nudności.</p>\n<p>Dzięki nowej regule <code class=\"language-text\">prefers-reduced-motion</code> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\">w MDN</a>) możemy ograniczyć lub wyłączyć potencjalnie szkodliwe animacje dla osób, które tę regułę w swoim systemie zdefiniowały.\nMamy tu do wyboru dwie wartości: <code class=\"language-text\">no-preference</code> oraz <code class=\"language-text\">reduce</code>.</p>\n<p>Według podejścia <a href=\"https://www.smashingmagazine.com/2009/04/progressive-enhancement-what-it-is-and-how-to-use-it/\">progressive enhancement</a> należałoby zdefiniować style najpierw bez animacji by następnie dodać je dla użytkowników, którym one nie przeszkadzają, np. tak:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.element</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* brak animacji */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">prefers-reduced-motion</span><span class=\"token punctuation\">:</span> no-preference<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">.element</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">animation</span><span class=\"token punctuation\">:</span> animate 1s<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Dla istniejących stron, które chciałyby wprowadzić tę regułę dość radykalnie, bo usuwając wszystkie CSSowe animacje, można użyć skryptu sugerowanego przez <a href=\"https://a11yproject.com/posts/understanding-vestibular-disorders/\">a11yproject.com</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">prefers-reduced-motion</span><span class=\"token punctuation\">:</span> reduce<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">*,\n  ::before,\n  ::after</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">animation-duration</span><span class=\"token punctuation\">:</span> 0.001s <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">animation-iteration-count</span><span class=\"token punctuation\">:</span> 1 <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition-duration</span><span class=\"token punctuation\">:</span> 0.001s <span class=\"token important\">!important</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>W narzędziach deweloperskich Chrome możemy emulować przełączanie tej reguły w szufladzie “Rendering” pod nazwą “Emulate CSS media feature prefers-reduced-motion”. Pro-tip: jeśli nie możesz jej znaleźć, wciśnij <kbd>Ctrl Shift P</kbd> w otwartych devtoolsach i wyszukaj “rendering”.</p>\n</blockquote>\n<p>Jak tylko zobaczymy szersze wsparcie tej techniki na stronach to myślę, że nie jestem jedyny, który widzi jej zastosowanie również we własnych eksploracjach internetu. Żadnych animacji, wszystko instant!</p>\n<h2>Kolor</h2>\n<p>Dark mode stał się ostatnio tak popularny, że mało jest już stron czy aplikacji desktopowych nie dających swoim użytkownikom możliwości wybrania między ciemnym i jasnym motywem.</p>\n<p>Naturalnie stało się to polem walki o wyższość jednej opcji nad drugą, która zwykle sprowadza się do argumentów ad “moja racja jest najmojsza”. Nic w tym dziwnego, bo jak się okazuje, wybór ten dla większości populacji jest kwestią preferencji nie wpływającej na wydajność czytania, choć średnio <a href=\"https://www.nngroup.com/articles/dark-mode\">motyw jasny na tym polu wygrywa</a>. Osoby z zaćmą i pokrewnymi schorzeniami mogą jednak odczuć poprawę po przejściu na motyw ciemny, a długoterminowe czytanie w jasnych motywach może mieć związek z krótkowzrocznością, więc powinniśmy uszanować wybór użytkownika w tym zakresie.</p>\n<p>Na pomoc i w zastępstwie (lub dodatkowo do) przycisków zmiany motywu przychodzi nam reguła <code class=\"language-text\">prefers-color-scheme</code> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme\">w MDN</a>). Dostępne w niej wartości <code class=\"language-text\">no-preference</code>, <code class=\"language-text\">light</code> i <code class=\"language-text\">dark</code> umożliwią nam podporządkowanie wyglądu strony ustawieniom systemu odwiedzającego.</p>\n<p>W przypadku stron domyślnie jasnych i korzystając ze zmiennych CSS możnaby napisać:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--bodyText</span><span class=\"token punctuation\">:</span> #222<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--bodyText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> screen and <span class=\"token punctuation\">(</span><span class=\"token property\">prefers-color-scheme</span><span class=\"token punctuation\">:</span> dark<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">:root</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">--bodyText</span><span class=\"token punctuation\">:</span> #eee<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Uważać przy tym trzeba, by reguła ta tyczyła się wyłącznie ekranów (stąd <code class=\"language-text\">screen</code>), bo ciemny motyw jest w większości przypadków niepożądany choćby przy drukowaniu strony (<code class=\"language-text\">print</code> media). W przypadku jeśli ciemny jest domyślny możnaby użyć:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> print<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token property\">prefers-color-scheme</span><span class=\"token punctuation\">:</span> light<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* style */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>co załatwi od razu problem kolorów w wersji strony przystosowanej do druku.</p>\n<blockquote>\n<p>Przełączać motywy można, jak w przypadku reduced-motion, w narzędziach deweloperskich Chrome pod nazwą “Emulate CSS media feature prefers-color-scheme”.</p>\n</blockquote>\n<h2>Inne</h2>\n<p>Parę z innych propozycji <abbr title=\"CSS Working Group\">CSSWG</abbr>, które jeszcze nie doczekały się finalnej wersji i szerokiego wsparcia w przeglądarkach to:</p>\n<ul>\n<li><code class=\"language-text\">prefers-reduced-transparency</code> ma służyć zmniejszeniu liczby elementów z przezroczystościami, by ułatwić przeglądanie osobom z problemami rozpoznywania kształtów (<a href=\"https://en.wikipedia.org/wiki/Apperceptive_agnosia\">rodzajem agnozji</a>). Problem ten nie zawsze powiązany jest z przezroczystością a jego występowania w przypadku Webu wydaje mi się jest niewiele, ale warto wiedzieć o takiej przypadłości.</li>\n<li><code class=\"language-text\">prefers-contrast</code> to z kolei reguła wskazująca jak mocny kontrast preferuje użytkownik. Obecnie, jak w przypadku dark mode, używa się przycisków przełączania styli, co ta propozycja automatyzuje. Przydatne, choć większość z nas dobrze by skupiła się najpierw na dostosowaniu do <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_WCAG/Perceivable/Color_contrast\">kontrastu przynajmniej AA</a>.</li>\n<li><code class=\"language-text\">prefers-reduced-data</code> ma mówić stronie, że użytkownik chce otrzymać dane o mniejszej wielkości. Ci, którym zależy na przesyłaniu minimalnej paczki użytkownikowi, już to robią, lecz wyobrażam sobie wykorzystanie tej reguły w przypadku szczerej chęci poprawienia funkcjonalności strony stopniowo w stylu progressive enhancement lecz biorąc pod uwagę wagę.</li>\n<li><code class=\"language-text\">inverted-colors</code> informuje o fakcie użycia odwrotnych kolorów w systemie użytkownika, by móc w takiej sytuacji odpowiednio zmodifykować stronę. Nie wiem, w jakim przypadku ktoś odwraca kolory, ale jest możliwość tego obsługi.</li>\n<li><code class=\"language-text\">forced-colors</code> zaś informuje o narzuceniu przez system użytkownika palety kolorów. Ma to miejsce, np. gdy w systemie Windows ustawiony jest tryb wysokiego kontrastu. Sporo elementów ozdobnych staje się w tym trybie niewidocznych, przez co mamy choćby okazję usunięcia zbędnych przestrzeni lub paddingów (co pewnie nie jest tym, o czym myślą twórcy standardu, ale tyle udało mi się wymyślić).</li>\n</ul>\n<h2>Więcej wolności</h2>\n<p>Podporządkowywanie się pod ustawienia użytkowników to dobry krok w kierunku tworzenia stron, które nie tylko wyświetlają informację, ale są otwarte na sposób, w jaki mają ją wyświetlać. Lubimy dostępny internet.</p>\n<p>Uff, coś się udało napisać na podsumowanie.</p>\n<p>A teraz sio, dodawać dark mode do swojego blogaska!</p>","frontmatter":{"title":"Preferencje użytkownika w CSS @media","date":"08 February, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2020-02-08-css-media-a11y/","previous":{"fields":{"slug":"/2019-05-06-zmienne-i-referencje/"},"frontmatter":{"title":"Zmienne i przekazywanie przez referencję w JS"}},"next":null}}